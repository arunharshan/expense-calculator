{"ast":null,"code":"import _defineProperty from \"/Users/fnuarunh/tutorials/expense-calculator-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ERROR_CATEGORY, FETCH_CATEGORY, LOADING_CATEGORY } from '../actions/types'; // if needed import the local storeage\n\nconst initState = {\n  loading: false,\n  error: null,\n  category: null\n};\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case LOADING_CATEGORY:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FETCH_CATEGORY:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        category: action.payload\n      });\n\n    case ERROR_CATEGORY:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/reducers/categoryReducer.js"],"names":["ERROR_CATEGORY","FETCH_CATEGORY","LOADING_CATEGORY","initState","loading","error","category","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,gBAHF,QAIO,kBAJP,C,CAKA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,KADO;AAEhBC,EAAAA,KAAK,EAAE,IAFS;AAGhBC,EAAAA,QAAQ,EAAE;AAHM,CAAlB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,gBAAL;AACE,+BACKK,KADL;AAEEH,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKH,cAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAE,IAHT;AAIEC,QAAAA,QAAQ,EAAEE,MAAM,CAACE;AAJnB;;AAMF,SAAKV,cAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHhB;;AAKF;AACE,aAAOH,KAAP;AApBJ;AAsBD,CAvBD","sourcesContent":["import {\n  ERROR_CATEGORY,\n  FETCH_CATEGORY,\n  LOADING_CATEGORY\n} from '../actions/types';\n// if needed import the local storeage\n\nconst initState = {\n  loading: false,\n  error: null,\n  category: null\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case LOADING_CATEGORY:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_CATEGORY:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        category: action.payload\n      };\n    case ERROR_CATEGORY:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}