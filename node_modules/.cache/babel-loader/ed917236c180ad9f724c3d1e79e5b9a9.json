{"ast":null,"code":"import _slicedToArray from \"/Users/fnuarunh/tutorials/expense-calculator-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fnuarunh/tutorials/expense-calculator-react/src/components/AddExpenseModalBox.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MDBModal, MDBModalBody } from 'mdbreact';\nimport ExpenseFormElements from './ExpenseFormElements';\nimport { closeModel } from '../actions/modelAction';\nimport { addNewExpense } from '../actions/expenseActions';\n\nconst AddExpenseModalBox = () => {\n  const modelState = useSelector(state => state.model);\n  const dispatch = useDispatch();\n\n  const _useState = useState(modelState.hasModel ? true : false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const _useState3 = useState({\n    isError: false,\n    message: null\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hasFieldError = _useState4[0],\n        setHasFieldError = _useState4[1];\n\n  useEffect(() => {\n    setIsOpen(modelState.hasModel ? true : false);\n  }, [modelState, hasFieldError]);\n\n  const onCancelHandler = () => {\n    dispatch(closeModel());\n    setHasFieldError({\n      isError: false,\n      message: null\n    });\n  };\n\n  const submitHandler = value => {\n    dispatch(addNewExpense(value.data));\n    dispatch(closeModel());\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MDBModal, {\n    isOpen: isOpen,\n    backdrop: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(MDBModalBody, {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"modal-title w-100 font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Add Expense\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    onClick: onCancelHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\xD7\"))), React.createElement(ExpenseFormElements, {\n    onFormSubmit: submitHandler,\n    onCancel: onCancelHandler,\n    edit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))));\n};\n\nexport default AddExpenseModalBox;","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/components/AddExpenseModalBox.js"],"names":["React","useState","useEffect","useSelector","useDispatch","MDBModal","MDBModalBody","ExpenseFormElements","closeModel","addNewExpense","AddExpenseModalBox","modelState","state","model","dispatch","hasModel","isOpen","setIsOpen","isError","message","hasFieldError","setHasFieldError","onCancelHandler","submitHandler","value","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,UAAvC;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,UAAU,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA9B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAF+B,oBAGHH,QAAQ,CAACU,UAAU,CAACI,QAAX,GAAsB,IAAtB,GAA6B,KAA9B,CAHL;AAAA;AAAA,QAGxBC,MAHwB;AAAA,QAGhBC,SAHgB;;AAAA,qBAIWhB,QAAQ,CAAC;AACjDiB,IAAAA,OAAO,EAAE,KADwC;AAEjDC,IAAAA,OAAO,EAAE;AAFwC,GAAD,CAJnB;AAAA;AAAA,QAIxBC,aAJwB;AAAA,QAITC,gBAJS;;AAS/BnB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS,CAACN,UAAU,CAACI,QAAX,GAAsB,IAAtB,GAA6B,KAA9B,CAAT;AACD,GAFQ,EAEN,CAACJ,UAAD,EAAaS,aAAb,CAFM,CAAT;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC5BR,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACAa,IAAAA,gBAAgB,CAAC;AACfH,MAAAA,OAAO,EAAE,KADM;AAEfC,MAAAA,OAAO,EAAE;AAFM,KAAD,CAAhB;AAID,GAND;;AAOA,QAAMI,aAAa,GAAGC,KAAK,IAAI;AAC7BV,IAAAA,QAAQ,CAACL,aAAa,CAACe,KAAK,CAACC,IAAP,CAAd,CAAR;AACAX,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACD,GAHD;;AAKA,SACE,0CACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEQ,MAAlB;AAA0B,IAAA,QAAQ,EAAE,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,oBAAa,OAHf;AAIE,kBAAW,OAJb;AAKE,IAAA,OAAO,EAAEM,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CAFF,CADF,EAaE,oBAAC,mBAAD;AACE,IAAA,YAAY,EAAEC,aADhB;AAEE,IAAA,QAAQ,EAAED,eAFZ;AAGE,IAAA,IAAI,EAAE,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,CADF;AAyBD,CAlDD;;AAoDA,eAAeZ,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MDBModal, MDBModalBody } from 'mdbreact';\n\nimport ExpenseFormElements from './ExpenseFormElements';\n\nimport { closeModel } from '../actions/modelAction';\nimport { addNewExpense } from '../actions/expenseActions';\n\nconst AddExpenseModalBox = () => {\n  const modelState = useSelector(state => state.model);\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(modelState.hasModel ? true : false);\n  const [hasFieldError, setHasFieldError] = useState({\n    isError: false,\n    message: null\n  });\n\n  useEffect(() => {\n    setIsOpen(modelState.hasModel ? true : false);\n  }, [modelState, hasFieldError]);\n\n  const onCancelHandler = () => {\n    dispatch(closeModel());\n    setHasFieldError({\n      isError: false,\n      message: null\n    });\n  };\n  const submitHandler = value => {\n    dispatch(addNewExpense(value.data));\n    dispatch(closeModel());\n  };\n\n  return (\n    <>\n      <MDBModal isOpen={isOpen} backdrop={false}>\n        <MDBModalBody className='modal-body'>\n          <div className='modal-header text-center'>\n            <h4 className='modal-title w-100 font-weight-bold'>Add Expense</h4>\n            <button\n              type='button'\n              className='close'\n              data-dismiss='modal'\n              aria-label='Close'\n              onClick={onCancelHandler}\n            >\n              <span aria-hidden='true'>&times;</span>\n            </button>\n          </div>\n          <ExpenseFormElements\n            onFormSubmit={submitHandler}\n            onCancel={onCancelHandler}\n            edit={false}\n          />\n        </MDBModalBody>\n      </MDBModal>\n    </>\n  );\n};\n\nexport default AddExpenseModalBox;\n"]},"metadata":{},"sourceType":"module"}