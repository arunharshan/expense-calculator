{"ast":null,"code":"import { FETCH_AUTH, ERROR_AUTH, LOADING_AUTH } from './types';\nimport axios from 'axios';\nconst baseurl = process.env.NODE_ENV == 'production' ? 'https://react-json-server-db.herokuapp.com' : 'http://localhost:5000';\n\nconst fetchAuth = user => async dispatch => {\n  dispatch(isLoading());\n\n  try {\n    await axios.get(\"\".concat(baseurl, \"/users?user_name=\").concat(user.username, \"&password=\").concat(user.password)).then(result => {\n      if (result.data[0]) {\n        dispatch({\n          type: FETCH_AUTH,\n          payload: result.data[0]\n        });\n      } else {\n        dispatch({\n          type: ERROR_AUTH,\n          payload: \"Could not find the user!. Try username/password as user/user -or- guest/guest\"\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_AUTH,\n      payload: 'something went wrong'\n    });\n  }\n};\n\nconst isLoading = () => {\n  return {\n    type: LOADING_AUTH\n  };\n};\n\nexport default fetchAuth;","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/actions/authActions.js"],"names":["FETCH_AUTH","ERROR_AUTH","LOADING_AUTH","axios","baseurl","process","env","NODE_ENV","fetchAuth","user","dispatch","isLoading","get","username","password","then","result","data","type","payload","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,QAAqD,SAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GACXC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,YAAxB,GACI,4CADJ,GAEI,uBAHN;;AAKA,MAAMC,SAAS,GAAGC,IAAI,IAAI,MAAMC,QAAN,IAAkB;AAC1CA,EAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR;;AACA,MAAI;AACF,UAAMR,KAAK,CACRS,GADG,WAECR,OAFD,8BAE4BK,IAAI,CAACI,QAFjC,uBAEsDJ,IAAI,CAACK,QAF3D,GAIHC,IAJG,CAIEC,MAAM,IAAI;AACd,UAAIA,MAAM,CAACC,IAAP,CAAY,CAAZ,CAAJ,EAAoB;AAClBP,QAAAA,QAAQ,CAAC;AACPQ,UAAAA,IAAI,EAAElB,UADC;AAEPmB,UAAAA,OAAO,EAAEH,MAAM,CAACC,IAAP,CAAY,CAAZ;AAFF,SAAD,CAAR;AAID,OALD,MAKO;AACLP,QAAAA,QAAQ,CAAC;AACPQ,UAAAA,IAAI,EAAEjB,UADC;AAEPkB,UAAAA,OAAO;AAFA,SAAD,CAAR;AAID;AACF,KAhBG,CAAN;AAiBD,GAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEjB,UAAR;AAAoBkB,MAAAA,OAAO,EAAE;AAA7B,KAAD,CAAR;AACD;AACF,CAvBD;;AAyBA,MAAMR,SAAS,GAAG,MAAM;AACtB,SAAO;AACLO,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD,CAJD;;AAMA,eAAeM,SAAf","sourcesContent":["import { FETCH_AUTH, ERROR_AUTH, LOADING_AUTH } from './types';\nimport axios from 'axios';\n\nconst baseurl =\n  process.env.NODE_ENV == 'production'\n    ? 'https://react-json-server-db.herokuapp.com'\n    : 'http://localhost:5000';\n\nconst fetchAuth = user => async dispatch => {\n  dispatch(isLoading());\n  try {\n    await axios\n      .get(\n        `${baseurl}/users?user_name=${user.username}&password=${user.password}`\n      )\n      .then(result => {\n        if (result.data[0]) {\n          dispatch({\n            type: FETCH_AUTH,\n            payload: result.data[0]\n          });\n        } else {\n          dispatch({\n            type: ERROR_AUTH,\n            payload: `Could not find the user!. Try username/password as user/user -or- guest/guest`\n          });\n        }\n      });\n  } catch (error) {\n    dispatch({ type: ERROR_AUTH, payload: 'something went wrong' });\n  }\n};\n\nconst isLoading = () => {\n  return {\n    type: LOADING_AUTH\n  };\n};\n\nexport default fetchAuth;\n"]},"metadata":{},"sourceType":"module"}