{"ast":null,"code":"var _jsxFileName = \"/Users/fnuarunh/tutorials/expense-calculator-react/src/components/GlobalActionButtons.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteExpense } from '../actions/expenseActions';\nimport { openModel } from '../actions/modelAction';\nimport { AlertBox } from './AlertBox'; //Calling on Clear All button-  has a great performance issue when deleting a large number of item at once hence limitting the add count by < 8 or so.\n\nconst GlobalActionButtons = ({\n  expenses,\n  edit\n}) => {\n  const dispatch = useDispatch();\n  const modal = useSelector(state => state.model.hasModel);\n\n  const deleteAllHandler = async () => {\n    await expenses.map(res => {\n      dispatch(deleteExpense(res.id));\n    });\n  };\n\n  const openModelHandler = () => {\n    dispatch(openModel());\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(AlertBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), expenses && !edit && !modal && React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn round btn-grad\",\n    onClick: openModelHandler,\n    disabled: expenses.length >= 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus fa-lx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger round \".concat(expenses.length <= 0 && 'hide'),\n    onClick: deleteAllHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-trash-alt fa-lx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))));\n};\n\nexport default GlobalActionButtons;","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/components/GlobalActionButtons.js"],"names":["React","useState","useEffect","useDispatch","useSelector","deleteExpense","openModel","AlertBox","GlobalActionButtons","expenses","edit","dispatch","modal","state","model","hasModel","deleteAllHandler","map","res","id","openModelHandler","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CACA;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAClD,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAAtB,CAAzB;;AAEA,QAAMC,gBAAgB,GAAG,YAAY;AACnC,UAAMP,QAAQ,CAACQ,GAAT,CAAaC,GAAG,IAAI;AACxBP,MAAAA,QAAQ,CAACN,aAAa,CAACa,GAAG,CAACC,EAAL,CAAd,CAAR;AACD,KAFK,CAAN;AAGD,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD,GAFD;;AAIA,SACE,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGG,QAAQ,IAAI,CAACC,IAAb,IAAqB,CAACE,KAAtB,IACC,0CACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,oBAFZ;AAGE,IAAA,OAAO,EAAEQ,gBAHX;AAIE,IAAA,QAAQ,EAAEX,QAAQ,CAACY,MAAT,IAAmB,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,iCAA0BZ,QAAQ,CAACY,MAAT,IAAmB,CAAnB,IAAwB,MAAlD,CAFX;AAGE,IAAA,OAAO,EAAEL,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CATF,CAHJ,CADF;AAwBD,CAtCD;;AAwCA,eAAeR,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteExpense } from '../actions/expenseActions';\nimport { openModel } from '../actions/modelAction';\nimport { AlertBox } from './AlertBox';\n//Calling on Clear All button-  has a great performance issue when deleting a large number of item at once hence limitting the add count by < 8 or so.\n\nconst GlobalActionButtons = ({ expenses, edit }) => {\n  const dispatch = useDispatch();\n  const modal = useSelector(state => state.model.hasModel);\n\n  const deleteAllHandler = async () => {\n    await expenses.map(res => {\n      dispatch(deleteExpense(res.id));\n    });\n  };\n\n  const openModelHandler = () => {\n    dispatch(openModel());\n  };\n\n  return (\n    <>\n      <AlertBox />\n      {expenses && !edit && !modal && (\n        <>\n          <button\n            type='button'\n            className='btn round btn-grad'\n            onClick={openModelHandler}\n            disabled={expenses.length >= 4}\n          >\n            <i className='fas fa-plus fa-lx'></i>\n          </button>\n          <button\n            type='button'\n            className={`btn btn-danger round ${expenses.length <= 0 && 'hide'}`}\n            onClick={deleteAllHandler}\n          >\n            <i className='fas fa-trash-alt fa-lx'></i>\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GlobalActionButtons;\n"]},"metadata":{},"sourceType":"module"}