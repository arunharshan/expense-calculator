{"ast":null,"code":"import { LOADING_EXPENSE, ERROR_EXPENSE, FETCH_EXPENSES, DELETE_EXPENSE, ADD_EXPENSE, UPDATE_EXPENSE, FETCH_DUMMY_EXPENSE } from './types';\nimport axios from 'axios';\nconst baseurl = process.env.NODE_ENV == 'production' ? 'https://react-json-server-db.herokuapp.com' : 'http://localhost:5000';\n\nconst fetchExpense = () => async dispatch => {\n  dispatch(isLoading());\n\n  try {\n    await axios.get(\"\".concat(baseurl, \"/expenses\")).then(res => {\n      if (res.data) {\n        // set time out - To slow down the data loading, so the customer can\n        // see the spinner :-)\n        setTimeout(() => {\n          dispatch({\n            type: FETCH_EXPENSES,\n            payload: res.data\n          });\n        }, 1000);\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: 'Cant perform fetch all expense operation!'\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server error occured.'\n    });\n  }\n}; // used for both delete all and delete single item\n\n\nconst deleteExpense = id => async dispatch => {\n  dispatch(isLoading());\n\n  try {\n    await axios.delete(\"\".concat(baseurl, \"/expenses/\").concat(id)).then(res => {\n      if (res.data) {\n        dispatch({\n          type: DELETE_EXPENSE,\n          payload: true\n        });\n        dispatch(fetchExpense());\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: 'Cant run the delete operation!'\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server error occured.'\n    });\n  }\n};\n\nconst addNewExpense = data => async dispatch => {\n  dispatch(isLoading);\n\n  try {\n    await axios({\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      url: \"\".concat(baseurl, \"/expenses/\"),\n      data\n    }).then(res => {\n      if (res.data) {\n        dispatch({\n          type: ADD_EXPENSE,\n          payload: true\n        });\n        dispatch(fetchExpense());\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: 'No data found!'\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server Error occured. Please try again'\n    });\n  }\n};\n\nconst updateExpense = (id, data) => async dispatch => {\n  dispatch(isLoading);\n\n  try {\n    await axios({\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'put',\n      url: \"\".concat(baseurl, \"/expenses/\").concat(id),\n      data\n    }).then(res => {\n      if (res.data) {\n        dispatch({\n          type: UPDATE_EXPENSE,\n          payload: true\n        });\n        dispatch(fetchExpense());\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: true\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server error occured.'\n    });\n  }\n};\n\nconst isLoading = () => {\n  return {\n    type: LOADING_EXPENSE,\n    payload: true\n  };\n};\n\nexport { fetchExpense, deleteExpense, addNewExpense, updateExpense };","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/actions/expenseActions.js"],"names":["LOADING_EXPENSE","ERROR_EXPENSE","FETCH_EXPENSES","DELETE_EXPENSE","ADD_EXPENSE","UPDATE_EXPENSE","FETCH_DUMMY_EXPENSE","axios","baseurl","process","env","NODE_ENV","fetchExpense","dispatch","isLoading","get","then","res","data","setTimeout","type","payload","error","deleteExpense","id","delete","addNewExpense","headers","method","url","updateExpense"],"mappings":"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","sourcesContent":["import {\n  LOADING_EXPENSE,\n  ERROR_EXPENSE,\n  FETCH_EXPENSES,\n  DELETE_EXPENSE,\n  ADD_EXPENSE,\n  UPDATE_EXPENSE,\n  FETCH_DUMMY_EXPENSE\n} from './types';\nimport axios from 'axios';\n\nconst baseurl =\n  process.env.NODE_ENV == 'production'\n    ? 'https://react-json-server-db.herokuapp.com'\n    : 'http://localhost:5000';\n\nconst fetchExpense = () => async dispatch => {\n  dispatch(isLoading());\n  try {\n    await axios.get(`${baseurl}/expenses`).then(res => {\n      if (res.data) {\n        // set time out - To slow down the data loading, so the customer can\n        // see the spinner :-)\n        setTimeout(() => {\n          dispatch({\n            type: FETCH_EXPENSES,\n            payload: res.data\n          });\n        }, 1000);\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: 'Cant perform fetch all expense operation!'\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server error occured.'\n    });\n  }\n};\n\n// used for both delete all and delete single item\nconst deleteExpense = id => async dispatch => {\n  dispatch(isLoading());\n  try {\n    await axios.delete(`${baseurl}/expenses/${id}`).then(res => {\n      if (res.data) {\n        dispatch({\n          type: DELETE_EXPENSE,\n          payload: true\n        });\n\n        dispatch(fetchExpense());\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: 'Cant run the delete operation!'\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server error occured.'\n    });\n  }\n};\n\nconst addNewExpense = data => async dispatch => {\n  dispatch(isLoading);\n  try {\n    await axios({\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      url: `${baseurl}/expenses/`,\n      data\n    }).then(res => {\n      if (res.data) {\n        dispatch({\n          type: ADD_EXPENSE,\n          payload: true\n        });\n\n        dispatch(fetchExpense());\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: 'No data found!'\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server Error occured. Please try again'\n    });\n  }\n};\n\nconst updateExpense = (id, data) => async dispatch => {\n  dispatch(isLoading);\n  try {\n    await axios({\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'put',\n      url: `${baseurl}/expenses/${id}`,\n      data\n    }).then(res => {\n      if (res.data) {\n        dispatch({\n          type: UPDATE_EXPENSE,\n          payload: true\n        });\n\n        dispatch(fetchExpense());\n      } else {\n        dispatch({\n          type: ERROR_EXPENSE,\n          payload: true\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EXPENSE,\n      payload: 'Server error occured.'\n    });\n  }\n};\n\nconst isLoading = () => {\n  return {\n    type: LOADING_EXPENSE,\n    payload: true\n  };\n};\n\nexport { fetchExpense, deleteExpense, addNewExpense, updateExpense };\n"]},"metadata":{},"sourceType":"module"}