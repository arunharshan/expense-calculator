{"ast":null,"code":"import _defineProperty from \"/Users/fnuarunh/tutorials/expense-calculator-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/fnuarunh/tutorials/expense-calculator-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fnuarunh/tutorials/expense-calculator-react/src/components/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBMask } from 'mdbreact';\nimport fetchAuth from '../actions/authActions';\nimport { getAuth } from '../utils';\nimport AlertBox from './AlertBox';\nimport LoadingBox from './LoadingBox';\nimport { isMobile } from '../utils';\n\nconst Login = props => {\n  // check if the user is already Sign in then dont show login page\n  if (getAuth() !== null) {\n    props.history.push('/dashboard');\n  }\n\n  const loginRef = useRef(null);\n  useEffect(() => {\n    if (isMobile && loginRef) loginRef.current.setFocus();\n  }, []); // Set userName focus if not a mobile device.\n  // set the Store values to a local variable\n\n  const authResult = useSelector(state => state.auth); // Dispatch an action. Create the dispatch instance\n\n  const dispatch = useDispatch(); // Create a state variable to store input values\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1]; // set the username and password to the userCredential variable\n\n\n  const onChangeHandler = e => {\n    e.persist();\n    setUserCredentials(values => _objectSpread({}, values, {\n      [e.target.name]: e.target.value\n    }));\n  }; // submit the form\n  // Dispatch the submission to the action\n  // use async since the redirect is not working along with Action\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    e.target.className += ' was-validated';\n\n    if (userCredentials.username && userCredentials.password) {\n      dispatch(fetchAuth(userCredentials));\n      props.history.push('/dashboard');\n    }\n  };\n\n  const hasLoading = () => {\n    return authResult ? authResult.loading == true ? React.createElement(LoadingBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : '' : '';\n  };\n\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, hasLoading(), React.createElement(AlertBox, {\n    message: {\n      error: authResult.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(MDBMask, {\n    className: \"flex-center flex-column text-white text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-brand mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"SIGN IN\"), React.createElement(\"img\", {\n    alt: \"login image\",\n    src: \"../assets/account.png\",\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"text-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ' ', \"username/password: user/user -or- guest/guest\", ' ')), React.createElement(MDBRow, {\n    className: \"d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    noValidate: true,\n    className: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    ref: loginRef,\n    label: \"Username Eg: user or guest\",\n    group: true,\n    type: \"text\",\n    name: \"username\",\n    required: true,\n    error: \"Enter username\",\n    success: \"right\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, ' ', React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Please enter username.\")), React.createElement(MDBInput, {\n    label: \"Password Eg: user or guest\",\n    group: true,\n    type: \"password\",\n    name: \"password\",\n    error: \"Enter password\",\n    onChange: onChangeHandler,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Please enter password.\"))), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-grad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Sign In\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/components/Login.js"],"names":["React","useState","useRef","useEffect","useSelector","useDispatch","MDBContainer","MDBRow","MDBCol","MDBInput","MDBMask","fetchAuth","getAuth","AlertBox","LoadingBox","isMobile","Login","props","history","push","loginRef","current","setFocus","authResult","state","auth","dispatch","userCredentials","setUserCredentials","onChangeHandler","e","persist","values","target","name","value","onSubmitHandler","preventDefault","className","username","password","hasLoading","loading","error"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBMask } from 'mdbreact';\n\nimport fetchAuth from '../actions/authActions';\nimport { getAuth } from '../utils';\nimport AlertBox from './AlertBox';\nimport LoadingBox from './LoadingBox';\n\nimport { isMobile } from '../utils';\n\nconst Login = props => {\n  // check if the user is already Sign in then dont show login page\n  if (getAuth() !== null) {\n    props.history.push('/dashboard');\n  }\n  const loginRef = useRef(null);\n  useEffect(() => {\n    if (isMobile && loginRef) loginRef.current.setFocus();\n  }, []); // Set userName focus if not a mobile device.\n\n  // set the Store values to a local variable\n  const authResult = useSelector(state => state.auth);\n\n  // Dispatch an action. Create the dispatch instance\n  const dispatch = useDispatch();\n\n  // Create a state variable to store input values\n  const [userCredentials, setUserCredentials] = useState({});\n\n  // set the username and password to the userCredential variable\n  const onChangeHandler = e => {\n    e.persist();\n    setUserCredentials(values => ({\n      ...values,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  // submit the form\n  // Dispatch the submission to the action\n  // use async since the redirect is not working along with Action\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    e.target.className += ' was-validated';\n    if (userCredentials.username && userCredentials.password) {\n      dispatch(fetchAuth(userCredentials));\n      props.history.push('/dashboard');\n    }\n  };\n\n  const hasLoading = () => {\n    return authResult ? authResult.loading == true ? <LoadingBox /> : '' : '';\n  };\n\n  return (\n    <MDBContainer>\n      {hasLoading()}\n      <AlertBox message={{ error: authResult.error }}></AlertBox>\n      <MDBMask className='flex-center flex-column text-white text-center'>\n        <h1 className='text-brand mt-5'>SIGN IN</h1>\n        <img alt='login image' src='../assets/account.png' className='' />\n        <small className='text-info'>\n          {' '}\n          username/password: user/user -or- guest/guest{' '}\n        </small>\n      </MDBMask>\n      <MDBRow className='d-flex justify-content-center'>\n        <MDBCol sm='6'>\n          <form onSubmit={onSubmitHandler} noValidate className='light'>\n            <div className='grey-text'>\n              <MDBInput\n                ref={loginRef}\n                label='Username Eg: user or guest'\n                group\n                type='text'\n                name='username'\n                required\n                error='Enter username'\n                success='right'\n                onChange={onChangeHandler}\n              >\n                {' '}\n                <div className='invalid-feedback'>Please enter username.</div>\n              </MDBInput>\n              <MDBInput\n                label='Password Eg: user or guest'\n                group\n                type='password'\n                name='password'\n                error='Enter password'\n                onChange={onChangeHandler}\n                required\n              >\n                <div className='invalid-feedback'>Please enter password.</div>\n              </MDBInput>\n            </div>\n            <div className='text-center'>\n              <button type='submit' className='btn btn-grad'>\n                Sign In\n              </button>\n              {/* <MDBBtn className='z-depth-2' color='pink' rounded type='submit'>\n                Sign In\n              </MDBBtn> */}\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}