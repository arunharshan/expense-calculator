{"ast":null,"code":"import _defineProperty from \"/Users/fnuarunh/tutorials/expense-calculator-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/fnuarunh/tutorials/expense-calculator-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fnuarunh/tutorials/expense-calculator-react/src/components/ExpenseItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MDBCard, MDBCardBody, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from 'mdbreact';\nimport SelectBox from './SelectBox';\nimport { useDispatch } from 'react-redux';\nimport { deleteExpense, updateExpense } from '../actions/expenseActions';\nimport { IS_EDIT_EXPENSE } from '../actions/types';\nimport CategoryIcon from './CategoryIcon';\nimport ExpenseFormElements from './ExpenseFormElements';\n\nconst ExpenseItem = ({\n  expenses\n}) => {\n  const dispatch = useDispatch();\n  const inputRef = useRef(null);\n\n  const _useState = useState({\n    status: false,\n    id: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        isEdit = _useState2[0],\n        setIsEdit = _useState2[1];\n\n  const deleteExpenseHandler = id => {\n    dispatch(deleteExpense(id));\n  };\n\n  const onEditChangeHandler = id => {\n    setIsEdit({\n      id,\n      status: true\n    });\n  };\n\n  const onCancelHandler = key => {\n    setIsEdit(value => _objectSpread({}, value, {\n      status: key\n    }));\n  };\n\n  const submitHandler = value => {\n    dispatch(updateExpense(value.id, value.data));\n    setIsEdit(value => _objectSpread({}, value, {\n      status: false\n    }));\n  };\n\n  useEffect(() => {\n    //editExpense\n    dispatch({\n      type: IS_EDIT_EXPENSE,\n      payload: isEdit.status\n    });\n  }, [isEdit]); // dispatching isEdit value, to show-hide the global buttons\n\n  if (expenses) {\n    return expenses.map(res => {\n      return React.createElement(MDBCard, {\n        className: \"mt-4 mb-4\",\n        key: res.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, isEdit.id === res.id && isEdit.status ? React.createElement(ExpenseFormElements, {\n        onFormSubmit: submitHandler,\n        onCancel: onCancelHandler,\n        edit: isEdit,\n        inputs: {\n          id: res.id,\n          title: res.title,\n          category: res.category,\n          amount: res.amount,\n          description: res.description\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(CategoryIcon, {\n        icons: res.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mb-0 text-capatilize \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, res.title)), React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(MDBDropdown, {\n        className: \"dropdown-menu-dotts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(MDBDropdownToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-ellipsis-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(MDBDropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(MDBDropdownItem, {\n        onClick: () => onEditChangeHandler(res.id),\n        value: \"edit\",\n        id: res.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), \" Edit\"), React.createElement(MDBDropdownItem, {\n        onClick: () => {\n          deleteExpenseHandler(res.id);\n        },\n        value: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), \" Delete\"))))), React.createElement(\"span\", {\n        className: \"text-sm text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, res.createdOn, \" | Expense category\\xA0\\xA0\"), React.createElement(SelectBox, {\n        selected: res.category,\n        style: \"no-selectbox\",\n        disable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-mute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"You spent \"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"$\", parseFloat(res.amount).toFixed(2))), React.createElement(\"p\", {\n        className: \"mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, res.description))));\n    });\n  } else {\n    return '';\n  }\n};\n\nexport default ExpenseItem;","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/components/ExpenseItem.js"],"names":["React","useState","useRef","useEffect","MDBCard","MDBCardBody","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","SelectBox","useDispatch","deleteExpense","updateExpense","IS_EDIT_EXPENSE","CategoryIcon","ExpenseFormElements","ExpenseItem","expenses","dispatch","inputRef","status","id","isEdit","setIsEdit","deleteExpenseHandler","onEditChangeHandler","onCancelHandler","key","value","submitHandler","data","type","payload","map","res","title","category","amount","description","createdOn","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem\n} from 'mdbreact';\nimport SelectBox from './SelectBox';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteExpense, updateExpense } from '../actions/expenseActions';\nimport { IS_EDIT_EXPENSE } from '../actions/types';\n\nimport CategoryIcon from './CategoryIcon';\nimport ExpenseFormElements from './ExpenseFormElements';\n\nconst ExpenseItem = ({ expenses }) => {\n  const dispatch = useDispatch();\n\n  const inputRef = useRef(null);\n  const [isEdit, setIsEdit] = useState({ status: false, id: null });\n\n  const deleteExpenseHandler = id => {\n    dispatch(deleteExpense(id));\n  };\n\n  const onEditChangeHandler = id => {\n    setIsEdit({ id, status: true });\n  };\n  const onCancelHandler = key => {\n    setIsEdit(value => ({ ...value, status: key }));\n  };\n\n  const submitHandler = value => {\n    dispatch(updateExpense(value.id, value.data));\n    setIsEdit(value => ({ ...value, status: false }));\n  };\n  useEffect(() => {\n    //editExpense\n    dispatch({ type: IS_EDIT_EXPENSE, payload: isEdit.status });\n  }, [isEdit]); // dispatching isEdit value, to show-hide the global buttons\n\n  if (expenses) {\n    return expenses.map(res => {\n      return (\n        <MDBCard className='mt-4 mb-4' key={res.id}>\n          <MDBCardBody>\n            {isEdit.id === res.id && isEdit.status ? (\n              <ExpenseFormElements\n                onFormSubmit={submitHandler}\n                onCancel={onCancelHandler}\n                edit={isEdit}\n                inputs={{\n                  id: res.id,\n                  title: res.title,\n                  category: res.category,\n                  amount: res.amount,\n                  description: res.description\n                }}\n              />\n            ) : (\n              <>\n                <div className='d-flex justify-content-between align-items-center mb-2'>\n                  <div className='mr-2'>\n                    <CategoryIcon icons={res.category} />\n                  </div>\n                  <div className='flex-grow-1'>\n                    <h5 className='mb-0 text-capatilize '>{res.title}</h5>\n                  </div>\n                  <div className=''>\n                    <MDBDropdown className='dropdown-menu-dotts'>\n                      <MDBDropdownToggle>\n                        <i className='fas fa-ellipsis-h'></i>\n                      </MDBDropdownToggle>\n                      <MDBDropdownMenu right>\n                        <MDBDropdownItem\n                          onClick={() => onEditChangeHandler(res.id)}\n                          value='edit'\n                          id={res.id}\n                        >\n                          <i className='fas fa-pencil-alt mr-1'></i> Edit\n                        </MDBDropdownItem>\n                        <MDBDropdownItem\n                          onClick={() => {\n                            deleteExpenseHandler(res.id);\n                          }}\n                          value='delete'\n                        >\n                          <i className='fas fa-trash mr-1'></i> Delete\n                        </MDBDropdownItem>\n                      </MDBDropdownMenu>\n                    </MDBDropdown>\n                  </div>\n                </div>\n                <span className='text-sm text-muted'>\n                  {res.createdOn} | Expense category&nbsp;&nbsp;\n                </span>\n                <SelectBox\n                  selected={res.category}\n                  style='no-selectbox'\n                  disable={true}\n                />\n                <div className='mt-1'>\n                  <span className='text-mute'>You spent </span>\n                  <strong>${parseFloat(res.amount).toFixed(2)}</strong>\n                </div>\n                <p className='mt-2'>{res.description}</p>\n              </>\n            )}\n          </MDBCardBody>\n        </MDBCard>\n      );\n    });\n  } else {\n    return '';\n  }\n};\nexport default ExpenseItem;\n"]},"metadata":{},"sourceType":"module"}