{"ast":null,"code":"import _defineProperty from \"/Users/fnuarunh/tutorials/expense-calculator-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { OPEN_ADD_EXPENSE_MODEL, CLOSE_ADD_EXPENSE_MODEL } from '../actions/types';\nconst initState = {\n  hasModel: false\n};\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case OPEN_ADD_EXPENSE_MODEL:\n      return _objectSpread({}, state, {\n        hasModel: action.payload\n      });\n\n    case CLOSE_ADD_EXPENSE_MODEL:\n      return _objectSpread({}, state, {\n        hasModel: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/reducers/modelReducer.js"],"names":["OPEN_ADD_EXPENSE_MODEL","CLOSE_ADD_EXPENSE_MODEL","initState","hasModel","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,sBADF,EAEEC,uBAFF,QAGO,kBAHP;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE;AADM,CAAlB;AAIA,gBAAe,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,sBAAL;AACE,+BACKI,KADL;AAEED,QAAAA,QAAQ,EAAEE,MAAM,CAACE;AAFnB;;AAIF,SAAKN,uBAAL;AACE,+BACKG,KADL;AAEED,QAAAA,QAAQ,EAAEE,MAAM,CAACE;AAFnB;;AAIF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import {\n  OPEN_ADD_EXPENSE_MODEL,\n  CLOSE_ADD_EXPENSE_MODEL\n} from '../actions/types';\n\nconst initState = {\n  hasModel: false\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case OPEN_ADD_EXPENSE_MODEL:\n      return {\n        ...state,\n        hasModel: action.payload\n      };\n    case CLOSE_ADD_EXPENSE_MODEL:\n      return {\n        ...state,\n        hasModel: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}