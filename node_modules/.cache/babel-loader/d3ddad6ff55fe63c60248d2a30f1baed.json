{"ast":null,"code":"var _jsxFileName = \"/Users/fnuarunh/tutorials/expense-calculator-react/src/components/TotalExpense.js\";\nimport React from 'react';\n\nconst TotalExpense = ({\n  expense\n}) => {\n  let arr = [];\n\n  if (expense) {\n    expense.map(res => {\n      arr.push(res.amount);\n    });\n\n    const printTotal = () => {\n      let round;\n      let percent; // or return arr.reduce...\n\n      const x = arr.reduce((total, res) => {\n        total += parseFloat(res);\n        return total;\n      }, 0);\n      round = x.toFixed(2);\n      percent = round;\n      return round;\n    };\n\n    const percentage = partialValue => {\n      const newVal = printTotal();\n      const totalValue = 2000;\n      return (100 * newVal / totalValue).toFixed(2);\n    };\n\n    return React.createElement(\"div\", {\n      className: \"card summary-card mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-hand-holding-usd brand-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-muted mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Total expense\"), React.createElement(\"h4\", {\n      className: \"font-weight-bold text-\".concat(percentage() > 100 ? 'danger' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"$\", printTotal()))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"aria-valuemax\": \"100\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuenow\": \"0\",\n      className: \"progress-bar spcl-\".concat(percentage() <= 25 ? 'success' : percentage() > 25 && percentage() <= 50 ? 'message' : percentage() > 50 && percentage() <= 70 ? 'warning' : 'danger'),\n      role: \"progressbar\",\n      style: {\n        width: \"\".concat(percentage(), \"%\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"card-text mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"You spent \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, percentage(), \"%\"), \" of your\", ' ', React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"$2000.00\"), \" budget.\"), percentage() > 100 ? React.createElement(\"p\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-lightbulb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" You have spent more than you planned.\") : ''));\n  }\n\n  return '';\n};\n\nexport default TotalExpense;","map":{"version":3,"sources":["/Users/fnuarunh/tutorials/expense-calculator-react/src/components/TotalExpense.js"],"names":["React","TotalExpense","expense","arr","map","res","push","amount","printTotal","round","percent","x","reduce","total","parseFloat","toFixed","percentage","partialValue","newVal","totalValue","width"],"mappings":"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","sourcesContent":["import React from 'react';\nconst TotalExpense = ({ expense }) => {\n  let arr = [];\n  if (expense) {\n    expense.map(res => {\n      arr.push(res.amount);\n    });\n\n    const printTotal = () => {\n      let round;\n      let percent;\n      // or return arr.reduce...\n      const x = arr.reduce((total, res) => {\n        total += parseFloat(res);\n        return total;\n      }, 0);\n      round = x.toFixed(2);\n      percent = round;\n      return round;\n    };\n    const percentage = partialValue => {\n      const newVal = printTotal();\n      const totalValue = 2000;\n      return ((100 * newVal) / totalValue).toFixed(2);\n    };\n\n    return (\n      <div className='card summary-card mt-4'>\n        <div className='top'>\n          <i className='fas fa-hand-holding-usd brand-color'></i>\n          <div className='info'>\n            <p className='text-muted mb-1'>Total expense</p>\n            <h4\n              className={`font-weight-bold text-${\n                percentage() > 100 ? 'danger' : ''\n              }`}\n            >\n              ${printTotal()}\n            </h4>\n          </div>\n        </div>\n        <div className='card-body'>\n          <div className='progress'>\n            <div\n              aria-valuemax='100'\n              aria-valuemin='0'\n              aria-valuenow='0'\n              className={`progress-bar spcl-${\n                percentage() <= 25\n                  ? 'success'\n                  : percentage() > 25 && percentage() <= 50\n                  ? 'message'\n                  : percentage() > 50 && percentage() <= 70\n                  ? 'warning'\n                  : 'danger'\n              }`}\n              role='progressbar'\n              style={{ width: `${percentage()}%` }}\n            ></div>\n          </div>\n          <p className='card-text mt-2'>\n            You spent <strong>{percentage()}%</strong> of your{' '}\n            <strong>$2000.00</strong> budget.\n          </p>\n          {percentage() > 100 ? (\n            <p className='text-danger'>\n              <i className='fas fa-lightbulb'></i> You have spent more than you\n              planned.\n            </p>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return '';\n};\n\nexport default TotalExpense;\n"]},"metadata":{},"sourceType":"module"}